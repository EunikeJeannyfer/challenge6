// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User{ 
  id Int @id @default(autoincrement())
  email String @unique
  nama String
  password String?
  googleId String?
  profile Profile?
  //si user ga wajib punya profile jd pake ?, ini 1:1
  bankAccount BankAccount[]
  //ini 1:m dgn bank jd pake []
}

model Profile {
  id Int @id @default(autoincrement())
  identity_type String
  identity_number Int
  address String
  picture String?
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  //1:1 wajib unique
}

model BankAccount{
  id Int @id @default(autoincrement())
  bank_nama String
  account_number String @unique
  balance Float 
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId Int
  transactionSource Transaction[] @relation("source")
  transactionDestination Transaction[] @relation("destination")
  //1:m dgn user
  //1:m dgn Transaction
}

model TipeTransaksi {
  id Int @id @default(autoincrement())
  nama_tipe String
  transaksi Transaction[]
}

model Transaction {
  id Int @id @default(autoincrement())
  source_account_number String
  destination_account_number String?
  amount Int 
  type Int
  transaction_date DateTime @default(now())
  typeTransaction TipeTransaksi @relation(fields: [type], references: [id])
  sourceNumber BankAccount @relation(name: "source", fields: [source_account_number], references: [account_number])
  destinationNumber BankAccount? @relation(name: "destination", fields: [destination_account_number], references: [account_number])
}
