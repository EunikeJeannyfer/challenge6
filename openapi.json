{
  "openapi": "3.0.3",
  "info": {
    "title": "Bank Account System - OpenAPI 3.0",
    "description": "Dokumentasi API Bank Account System ",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Everything about user",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "profile",
      "description": "Access to profile from each user"
    },
    {
      "name": "bankAccount",
      "description": "Everything about bank account"
    },
    {
      "name": "tipe_transaksi",
      "description": "Type of transaction"
    },
    {
      "name": "transaction",
      "description": "Operations about transaction"
    }
  ],
  "paths": {
    "/v2/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get users lists",
        "description": "Get users lists",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Pagination page",
            "required": false,
            "explode": true,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination limit",
            "required": false,
            "explode": true,
            "schema": {
              "type": "number",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profile"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create users",
        "description": "Creates users",
        "operationId": "addUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/users/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find user by ID",
        "description": "Returns a single pet",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Account not found"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "name that need to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes user",
        "description": "delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid pet value"
          }
        }
      }
    },
    "/v2/accounts": {
      "get": {
        "tags": [
          "bankAccount"
        ],
        "summary": "Get bankAccount lists",
        "description": "Get bankAccount lists",
        "operationId": "getbankAccount",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "bankAccount"
        ],
        "summary": "Create bankAccount",
        "description": "Creates bankAccount",
        "operationId": "addAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/accounts/{id}": {
      "get": {
        "tags": [
          "bankAccount"
        ],
        "summary": "Find account by ID",
        "description": "Returns a single account",
        "operationId": "getAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Account not found"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "bankAccount"
        ],
        "summary": "Update bankAccount",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "name that need to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "bankAccount"
        ],
        "summary": "Deletes account",
        "description": "delete account",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Account"
          }
        }
      }
    },
    "/v2/profile/{id}": {
      "put": {
        "tags": [
          "profile"
        ],
        "summary": "Update profile",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "name that need to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "profile"
        ],
        "summary": "Deletes profile",
        "description": "delete profile",
        "operationId": "deleteProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Profile"
          }
        }
      }
    },
    "/v2/type": {
      "get": {
        "tags": [
          "tipe_transaksi"
        ],
        "summary": "Get type lists",
        "description": "Get type lists",
        "operationId": "getType",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipeTransaksi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TipeTransaksi"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Type not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "tipe_transaksi"
        ],
        "summary": "Create type",
        "description": "Creates type",
        "operationId": "addType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TipeTransaksi"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipeTransaksi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TipeTransaksi"
                }
              }
            }
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/type/{id}": {
      "get": {
        "tags": [
          "tipe_transaksi"
        ],
        "summary": "Find type by ID",
        "description": "Returns a single type",
        "operationId": "getTypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of type to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Type not found"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "tipe_transaksi"
        ],
        "summary": "Update bankAccount",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id that need to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent type in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "tipe_transaksi"
        ],
        "summary": "Deletes type",
        "description": "delete type",
        "operationId": "deleteType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Type id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Type"
          }
        }
      }
    },
    "/v2/transaction": {
      "get": {
        "tags": [
          "transaction"
        ],
        "summary": "Get transaction lists",
        "description": "Get transaction lists",
        "operationId": "getTransaction",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Pagination page",
            "required": false,
            "explode": true,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination limit",
            "required": false,
            "explode": true,
            "schema": {
              "type": "number",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Transaction not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "transaction"
        ],
        "summary": "deposit transaction",
        "description": "deposit transaction",
        "operationId": "deposit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/transfer": {
      "post": {
        "tags": [
          "transaction"
        ],
        "summary": "Create transfer transaction",
        "description": "Creates transfer transaction",
        "operationId": "transfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/transaction/{id}": {
      "get": {
        "tags": [
          "transaction"
        ],
        "summary": "Find transaction by ID",
        "description": "Returns a single transaction",
        "operationId": "getTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Type not found"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "lala"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "nama",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "nama": {
            "type": "string",
            "example": "John"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Profile": {
        "required": [
          "identity_type",
          "identity_number",
          "address",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "example": 198772
          },
          "identity_type": {
            "type": "string",
            "example": "KTP"
          },
          "identity_number": {
            "type": "integer",
            "format": "int32",
            "example": 22105617
          }
        },
        "xml": {
          "name": "profile"
        }
      },
      "BankAccount": {
        "type": "object",
        "required": [
          "bank_nama",
          "account_number",
          "balance",
          "userId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "example": 198772
          },
          "bank_nama": {
            "type": "string",
            "example": "BCA"
          },
          "account_number": {
            "type": "string",
            "example": 2501097342338853
          },
          "createAt": {
            "type": "string",
            "format": "datetime",
            "example": "2019-10-10T00:00:00.000Z"
          },
          "updateAt": {
            "type": "string",
            "format": "datetime",
            "example": "2023-10-1"
          }
        },
        "xml": {
          "name": "bankaccount"
        }
      },
      "TipeTransaksi": {
        "type": "object",
        "required": [
          "nama_tipe"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "nama_tipe": {
            "type": "string",
            "example": "Transfer"
          }
        },
        "xml": {
          "name": "tipeTransaksi"
        }
      },
      "Transaction": {
        "type": "object",
        "required": [
          "source_account_number",
          "amount",
          "type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "source_account_number": {
            "type": "string",
            "example": "Dogs"
          },
          "destination_account_number": {
            "type": "string",
            "example": "Dogs"
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "example": 500000
          },
          "type": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        },
        "xml": {
          "name": "transaction"
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}